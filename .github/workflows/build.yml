name: Build

on: 
  push:
    branches: 
      - "*"
    tags:
      - v*
  pull_request:

jobs:
    
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Download deps
      run: |
        wget --output-document=gotestsum.tgz https://github.com/gotestyourself/gotestsum/releases/download/v0.3.5/gotestsum_0.3.5_linux_amd64.tar.gz
        tar xzf gotestsum.tgz
        rm -f gotestsum.tgz
    - name: Test
      uses: docker://golang:1-stretch
      with:
        args: ./gotestsum --jsonfile tests-reports.json  -- -count=1 -coverprofile coverage-sonar.out -coverpkg=./... ./...
      env:
        XDG_CACHE_HOME: /tmp/.cache
        HOME: /tmp/buildhome
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v1.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Snyk Vulnerabilities Scan
      uses: docker://snyk/snyk-cli:npm
      with:
        entrypoint: '$HOME/docker-entrypoint.sh'
        args: '--org=Ystia'
      env:
        MONITOR: true
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        PROJECT_PATH: /github/workspace
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: [tests]
    strategy:
        matrix:
            os: [linux, darwin, windows]
            arch: [386, amd64]
    steps:
    - uses: actions/checkout@v1
    - name: prepare env for ${{ matrix.os }}_${{ matrix.arch }}
      run: mkdir -p ./build/${{ matrix.os }}_${{ matrix.arch }}
    - name: Build
      uses: docker://golang:1-stretch
      with:
        args: go build -o ./build/${{ matrix.os }}_${{ matrix.arch }}/ ./cmd/tdt2go
      env:
        XDG_CACHE_HOME: /tmp/.cache
        HOME: /tmp/buildhome
        CGO_ENABLED: 0
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
    - name: zip files
      run: |
        for PLATFORM in $(find ./build -mindepth 1 -maxdepth 1 -type d); do
          OSARCH=$(basename ${PLATFORM})
          echo "--> ${OSARCH}"
          pushd $PLATFORM >/dev/null 2>&1
          zip ../tdt2go_${OSARCH}.zip ./*
          tar czvf ../tdt2go_${OSARCH}.tgz ./*
          popd >/dev/null 2>&1
          rm -fr $PLATFORM
        done
    - name: Upload tgz artifact
      uses: actions/upload-artifact@v1.0.0
      if: matrix.os != 'windows'
      with:
        name: tdt2go-bins
        path: ./build/tdt2go_${{ matrix.os }}_${{ matrix.arch }}.tgz
    - name: Upload zip artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: tdt2go-bins
        path: ./build/tdt2go_${{ matrix.os }}_${{ matrix.arch }}.zip
        
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: [build]
    steps:    
    - name: Download artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: tdt2go-bins
        path: build
    - name: GH Release
      uses: softprops/action-gh-release@v0.1.0
      id: make-release
      with:
        files: ./build/tdt2go_*_*.*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
