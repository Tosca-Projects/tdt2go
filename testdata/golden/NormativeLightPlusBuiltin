// Code generated by tdt2go
// DO NOT EDIT! ANY CHANGES MAY BE OVERWRITTEN.

package tdt2go

import (
	"time"
)

// Credential is the generated representation of tosca.datatypes.Credential data type
//
// The Credential type is a complex TOSCA data Type used when describing authorization credentials used to access network accessible resources.
type Credential struct {
	Root
	// The optional list of protocol-specific keys or assertions.
	Keys map[string]string `mapstructure:"keys" json:"keys,omitempty"`
	// The optional protocol name.
	Protocol string `mapstructure:"protocol" json:"protocol,omitempty"`
	// The required token used as a credential for authorization or access to a networked resource.
	Token string `mapstructure:"token" json:"token,omitempty"`
	// The required token type.
	TokenType string `mapstructure:"token_type" json:"token_type,omitempty"`
	// The optional user (name or ID) used for non-token based credentials.
	User string `mapstructure:"user" json:"user,omitempty"`
}

// Root is the generated representation of tosca.datatypes.Root data type
//
// The TOSCA root Data Type all other TOSCA base Data Types derive from
type Root struct {
}

// TimeInterval is the generated representation of tosca.datatypes.TimeInterval data type
type TimeInterval struct {
	Root
	EndTime   time.Time `mapstructure:"end_time" json:"end_time,omitempty"`
	StartTime time.Time `mapstructure:"start_time" json:"start_time,omitempty"`
}

// Range is the generated representation of tosca:range data type
//
// The range type can be used to define numeric ranges with a lower and upper boundary. For example, this allows for specifying a range of ports to be opened in a firewall.
type Range []uint64

// ScalarUnit is the generated representation of tosca:scalar-unit data type
//
// The scalar-unit type can be used to define scalar values along with a unit from the list of recognized units provided below.
type ScalarUnit string

// ScalarUnitBitRate is the generated representation of tosca:scalar-unit.bitrate data type
//
// used to define properties that have scalar values measured in bits or bytes per second.
type ScalarUnitBitRate ScalarUnit

// ScalarUnitFrequency is the generated representation of tosca:scalar-unit.frequency data type
//
// used to define properties that have scalar values measured in units per second.
type ScalarUnitFrequency ScalarUnit

// ScalarUnitSize is the generated representation of tosca:scalar-unit.size data type
//
// used to define properties that have scalar values measured in size units.
type ScalarUnitSize ScalarUnit

// ScalarUnitTime is the generated representation of tosca:scalar-unit.time data type
//
// used to define properties that have scalar values measured in time units.
type ScalarUnitTime ScalarUnit

// Version is the generated representation of tosca:version data type
//
// TOSCA supports the concept of “reuse” of type definitions, as well as template definitions which could be version and change over time.  It is important to provide a reliable, normative means to represent a version string which enables the comparison and management of types and templates over time. Therefore, the TOSCA TC intends to provide a normative version type (string) for this purpose in future Working Drafts of this specification.
type Version string
